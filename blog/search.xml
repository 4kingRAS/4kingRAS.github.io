<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>2018ti-nuedc</title>
      <link href="/blog/2018/08/23/2018ti-nuedc/"/>
      <url>/blog/2018/08/23/2018ti-nuedc/</url>
      <content type="html"><![CDATA[<h1 id="2018年TI杯大学生电子设计竞赛-手势识别题"><a href="#2018年TI杯大学生电子设计竞赛-手势识别题" class="headerlink" title="2018年TI杯大学生电子设计竞赛-手势识别题"></a>2018年TI杯大学生电子设计竞赛-手势识别题</h1><hr><p>&emsp;&emsp;没想到能拿到省一，本文做个简单记录</p><h2 id="D题：手势识别装置"><a href="#D题：手势识别装置" class="headerlink" title="D题：手势识别装置"></a>D题：手势识别装置</h2><p><a href="https://www.nuedc-training.com.cn/index/news/details/new_id/56" target="_blank" rel="noopener">https://www.nuedc-training.com.cn/index/news/details/new_id/56</a></p><h4 id="1．任务"><a href="#1．任务" class="headerlink" title="1．任务"></a>1．任务</h4><p>基于TI公司传感芯片FDC2214设计制作一个手势识别装置，实现对猜拳游戏和划拳游戏的判决。该装置也可以直接使用FDC2214 EVM板，要求所使用的FDC2214芯片或者EVM板不得超过2块。</p><p>装置具有训练和判决两种工作模式。在判决模式下实验装置能对指定人员进行猜拳游戏和划拳游戏的判决。这里猜拳游戏的判决是指对手势比划“石头”、“剪刀”和“布”的判定，划拳游戏的判定是指手势比划“1”、“2”、“3”、“4”和“5”的判定。在训练模式下能对任意人员进行猜拳游戏和划拳游戏的手势训练，经过有限次训练后，能进行正确的猜拳游戏和划拳游戏的手势判决。<br><a id="more"></a></p><h4 id="2．要求"><a href="#2．要求" class="headerlink" title="2．要求"></a>2．要求</h4><p>（1）装置工作在判决模式下，能对参赛者指定人员进行猜拳判决，给出手势“石头”、“剪刀”和“布”的准确判决，要求每一次判决的时间不大于1秒。                 （18分）</p><p>（2）装置工作在判决模式下，能对参赛者指定人员进行划拳判决，给出手势“1”、“2”、“3”、“4”和“5”的准确判决，要求每一次判决的时间不大于1秒。            （28分）</p><p>（3）装置工作在训练模式下，对任意测试者进行猜拳的手势训练，每种动作训练次数不大于3次，总的训练时间不大于1分钟；然后切换工作模式到判决模式，对被训练的人员进行猜拳判决，要求每一次判决的时间不大于1秒。        （21分）</p><p>（4）装置工作在训练模式下，对任意测试者进行划拳的手势训练，每种动作训练次数不大于3次，总的训练时间不大于2分钟；然后切换工作模式到判决模式，对被训练的人员进行划拳判决，要求每一次判决的时间不大于1秒。        （29分）</p><p>（5）其他。                                             （ 4分）<br>（6）设计报告。                                         （20分）</p><hr><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h3 id="1-设备搭建"><a href="#1-设备搭建" class="headerlink" title="1 - 设备搭建"></a>1 - 设备搭建</h3><p>&emsp;&emsp;FDC2214是一种电容传感器，将传感器接一块极板。手在接近极板时就会影响极板的电容值，这个电容值会由FDC2214给出。根据测试，手接触极板的面积与返回的电容值相关，根据这个原理就能进行简单的手势识别。</p><p>设备搭建只需根据题目所给的测试样例，当然极板是越灵敏越好，一般铜板就能凑合用。<br><img src="/blog/2018/08/23/2018ti-nuedc/test.png =400x" alt="测试样例"> </p><h3 id="2-硬件设计及开发环境"><a href="#2-硬件设计及开发环境" class="headerlink" title="2 - 硬件设计及开发环境"></a>2 - 硬件设计及开发环境</h3><p>&emsp;&emsp;由于各种条件限制，而且本人也是第一次接触单片机开发（之前有过一段arduino的开发经验），所以走了许多弯路。</p><p>主要的困难有三个：</p><p>&emsp;&emsp; 一：FDC2214没有买evm开发板，很不好调试，为了调试队友买了<a href="https://www.st.com/en/microcontrollers/stm32f103rc.html" target="_blank" rel="noopener">stm32f103rct6</a>，淘宝店自带了OLED板和标程。</p><p>&emsp;&emsp; 二：在队友全麻瓜状态下，就只能靠自己摸了。stm32搞懂后，有个问题就是无法调试，折腾半天发现是线坏了。</p><font color="#dd0000">重要经验：当你毫无头绪的时候，往往就是接触不良，或者硬件坏了。</font><p>&emsp;&emsp; 三：stm32能调试以后，又一个坑是队友买的是最小系统板，没有带按钮。自己焊按钮还要去抖等等各种复杂操作，太麻烦，也来不及学。好在我之前做arduino知道，办法总比困难多，解决方案是用Ti的msp430的evm板，自带了两个按钮，然后用<a href="http://www.ti.com/tool/msp-exp430f5529lp" target="_blank" rel="noopener">msp430f5529 LaunchPad</a>的UART串口与stm32板通信。</p><p>&emsp;&emsp; 一个好的工程师一定不能执着于技术，什么方法简便易行，稳定可靠就用什么方法，切忌花里胡哨把自己带入坑里。ti的板子开发一般用CCS，语法奇奇怪怪，引脚的设定也很奇怪。为了快速上手我找到了ti系列的arduino，也就是<a href="http://energia.nu/" target="_blank" rel="noopener">energia</a>，Ti官方也有支持，很不错的IDE。</p><p>在energia里选好板子，就可以直接开发了，跟arduino一类的语法，引脚使用直接digitalWrite什么的，很方便。<br><img src="/blog/2018/08/23/2018ti-nuedc/energia.png" alt="energia"> </p><p>&emsp;&emsp;至于stm32就老老实实用MDK 5，代码就是纯C，不难懂。有几个坑就是连接器一定要搞明白，有ST-Link的，也有Jtag的古老方式的。具体的搜百度。</p><p>最后的硬件方案如图（手不是我）：</p><p><img src="/blog/2018/08/23/2018ti-nuedc/device.jpg =600x" alt="硬件连接"></p><p><img src="/blog/2018/08/23/2018ti-nuedc/block.jpg =600x" alt="板子"></p><h3 id="3-程序设计"><a href="#3-程序设计" class="headerlink" title="3 - 程序设计"></a>3 - 程序设计</h3><p>程序流程如图：<br><img src="/blog/2018/08/23/2018ti-nuedc/flow.png" alt="flowchart"></p><p>&emsp;&emsp;总的思路就是，用msp430的按键发送命令，6用于模式切换，9发一次开始训练，再发一次结束训练并自动返回均值。判决就根据这均值取范围，很简单的算法，不过很有效。注意的一点就是，UART的跳线，TX要接对应的RX，波特率要匹配。</p><h4 id="主体结构"><a href="#主体结构" class="headerlink" title="主体结构"></a>主体结构</h4><figure class="hljs highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">void</span>)</span></span>&#123;<br>u8 t = <span class="hljs-number">0</span>;<span class="hljs-comment">//状态位，0为判决模式，1，2，3，4，5，剪刀石头布 1-8</span><br>u8 len;<br>u8 flag = <span class="hljs-number">0</span>;<span class="hljs-comment">//判断开始键是否按下</span><br>u8 count = <span class="hljs-number">0</span>;<span class="hljs-comment">//样本个数</span><br><span class="hljs-keyword">float</span> temp = <span class="hljs-number">0</span>;<span class="hljs-comment">//save mean</span><br>  Sys_Init();<br><span class="hljs-keyword">while</span>(<span class="hljs-number">1</span>)<br>&#123;<br><span class="hljs-keyword">if</span>(USART_RX_STA&amp;<span class="hljs-number">0x8000</span>)<span class="hljs-comment">//UART收到信息</span><br>&#123;<br>len = USART_RX_STA&amp;<span class="hljs-number">0x3f</span>;<br><span class="hljs-keyword">if</span>(USART_RX_BUF[<span class="hljs-number">0</span>] == <span class="hljs-number">54</span>)&#123;<span class="hljs-comment">//UART</span><br><span class="hljs-keyword">if</span>(t &lt; <span class="hljs-number">8</span>)<span class="hljs-comment">//收到6，进入状态循环，0-8</span><br>t++;<br><span class="hljs-keyword">else</span><br>t = <span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-keyword">if</span>(USART_RX_BUF[<span class="hljs-number">0</span>] == <span class="hljs-number">57</span>)&#123;<span class="hljs-comment">//收到9开始训练，再收到一次则取均值</span><br><span class="hljs-keyword">if</span>(flag)&#123;<span class="hljs-comment">// mean = sum / 样本数</span><br>flag = <span class="hljs-number">0</span>;<br>sp[t - <span class="hljs-number">1</span>] = temp / count;<br>temp = <span class="hljs-number">0</span>;<br>count = <span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-keyword">else</span> <br>flag = <span class="hljs-number">1</span>;<br>&#125;<br>USART_RX_STA=<span class="hljs-number">0</span>;<br>&#125;<br>showHead(t);<span class="hljs-comment">//信息显示</span><br>OLED_P6x8Str(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, AsciiBuff, <span class="hljs-number">0</span>);<span class="hljs-comment">//OLED字符串显示 ， （x， y， string， flag）</span><br><br><span class="hljs-keyword">if</span>(flag)&#123;<br><span class="hljs-keyword">if</span>(t &gt; <span class="hljs-number">5</span>)<br>temp += res0 - temp0;<span class="hljs-comment">//大于5时才是剪刀石头布训练</span><br><span class="hljs-keyword">else</span><br>temp += res1 - temp1;<br>count++;<br>showHead(<span class="hljs-number">66</span>);<br>&#125;<br><span class="hljs-keyword">else</span> showHead(<span class="hljs-number">99</span>);<br>OLED_P6x8Str(<span class="hljs-number">0</span>, <span class="hljs-number">2</span>, AsciiBuff, <span class="hljs-number">0</span>);<br><br>u8ToAscii(<span class="hljs-number">0</span>, JudgeType(res0 - temp0));<br>OLED_P6x8Str(<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, AsciiBuff, <span class="hljs-number">0</span>);<br><br>u8ToAscii(JudgeNum(res1 - temp1), <span class="hljs-number">4</span>);<br>OLED_P6x8Str(<span class="hljs-number">0</span>, <span class="hljs-number">3</span>, AsciiBuff, <span class="hljs-number">0</span>);<br><br><span class="hljs-comment">//OLED浮点数显示 ， （x， y， float， flag）</span><br>Oled_Printf_Float(<span class="hljs-number">0</span>, <span class="hljs-number">7</span>, sp[t - <span class="hljs-number">1</span>], <span class="hljs-number">0</span>);<span class="hljs-comment">//当前均值信息</span><br><span class="hljs-comment">//Oled_Printf_Float(0, 5, res0 - temp0, 0);</span><br>Oled_Printf_Float(<span class="hljs-number">0</span>, <span class="hljs-number">5</span>, res0 - temp0, <span class="hljs-number">0</span>);<span class="hljs-comment">//剪刀石头布pf  temp为电容板的初始电容值，在init里写</span><br>Oled_Printf_Float(<span class="hljs-number">0</span>, <span class="hljs-number">6</span>, res1 - temp1, <span class="hljs-number">0</span>);<span class="hljs-comment">//12345电容值</span><br><span class="hljs-keyword">while</span>(USART_GetFlagStatus(USART1, USART_FLAG_TC) == RESET);<span class="hljs-comment">//UART通信结束</span><br>delay_ms(<span class="hljs-number">100</span>);<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="ASCII显示"><a href="#ASCII显示" class="headerlink" title="ASCII显示"></a>ASCII显示</h4><figure class="hljs highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">u8ToAscii</span><span class="hljs-params">(u8 num, <span class="hljs-keyword">int</span> type)</span><span class="hljs-comment">//显示程序，num为数字，type决定猜拳划拳</span><br></span>&#123;<span class="hljs-comment">//OLED格式 8*8</span><br>u8 i = <span class="hljs-number">0</span>;<br>AsciiBuff[<span class="hljs-number">7</span>] = <span class="hljs-number">32</span>;<span class="hljs-comment">//第八位为空格</span><br><span class="hljs-keyword">switch</span>(type)&#123;<br>    <span class="hljs-keyword">case</span> <span class="hljs-number">1</span>:<br>    AsciiBuff[<span class="hljs-number">0</span>] = <span class="hljs-number">74</span>;<br>AsciiBuff[<span class="hljs-number">1</span>] = <span class="hljs-number">105</span>;<br>AsciiBuff[<span class="hljs-number">2</span>] = <span class="hljs-number">97</span>;  <br>AsciiBuff[<span class="hljs-number">3</span>] = <span class="hljs-number">110</span>;  <br>AsciiBuff[<span class="hljs-number">4</span>] = <span class="hljs-number">100</span>;<br>AsciiBuff[<span class="hljs-number">5</span>] = <span class="hljs-number">97</span>;<br>AsciiBuff[<span class="hljs-number">6</span>] = <span class="hljs-number">111</span>;<span class="hljs-comment">//ASCII码 Jiandao</span><br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> <span class="hljs-number">2</span>:<br>    ......<br><span class="hljs-keyword">break</span>;<br>&#125;<br><br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">showHead</span><span class="hljs-params">(u8 type)</span></span>&#123;<br>  AsciiBuff[<span class="hljs-number">0</span>] = <span class="hljs-number">84</span>;<br>AsciiBuff[<span class="hljs-number">1</span>] = <span class="hljs-number">82</span>;<br>AsciiBuff[<span class="hljs-number">2</span>] = <span class="hljs-number">65</span>;  <br>AsciiBuff[<span class="hljs-number">3</span>] = <span class="hljs-number">73</span>;  <br>AsciiBuff[<span class="hljs-number">4</span>] = <span class="hljs-number">78</span>;<br>AsciiBuff[<span class="hljs-number">5</span>] = <span class="hljs-number">32</span>;<br>AsciiBuff[<span class="hljs-number">7</span>] = <span class="hljs-number">32</span>;<span class="hljs-comment">//ASCII码 TRAIN</span><br><span class="hljs-keyword">switch</span>(type)&#123;<br>    <span class="hljs-keyword">case</span> <span class="hljs-number">0</span>:<br>      AsciiBuff[<span class="hljs-number">0</span>] = <span class="hljs-number">74</span>;<br>AsciiBuff[<span class="hljs-number">1</span>] = <span class="hljs-number">85</span>;<br>AsciiBuff[<span class="hljs-number">2</span>] = <span class="hljs-number">68</span>;  <br>AsciiBuff[<span class="hljs-number">3</span>] = <span class="hljs-number">71</span>;  <br>AsciiBuff[<span class="hljs-number">4</span>] = <span class="hljs-number">69</span>;<br>AsciiBuff[<span class="hljs-number">5</span>] = <span class="hljs-number">32</span>;<br>AsciiBuff[<span class="hljs-number">6</span>] = <span class="hljs-number">32</span>;<span class="hljs-comment">//ASCII码 JUDGE</span><br><span class="hljs-keyword">break</span>;<br>    <span class="hljs-keyword">case</span> <span class="hljs-number">1</span>:<br>AsciiBuff[<span class="hljs-number">6</span>] = <span class="hljs-number">49</span>;<span class="hljs-comment">//1 - 5</span><br>    <span class="hljs-keyword">break</span>;<br>    <span class="hljs-keyword">case</span> <span class="hljs-number">2</span>:<br>    ......<br><span class="hljs-keyword">break</span>;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="训练"><a href="#训练" class="headerlink" title="训练"></a>训练</h4><figure class="hljs highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">JudgeType</span><span class="hljs-params">(<span class="hljs-keyword">float</span> pf)</span></span>&#123;<span class="hljs-comment">//sp为训练的均值</span><br><span class="hljs-keyword">if</span>(pf &lt; sp[<span class="hljs-number">5</span>] + <span class="hljs-number">0.6</span> &amp;&amp; pf &gt; sp[<span class="hljs-number">5</span>] - <span class="hljs-number">0.6</span>)<span class="hljs-comment">//jiandao </span><br><span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br><span class="hljs-keyword">if</span>(pf &lt; sp[<span class="hljs-number">6</span>] + <span class="hljs-number">0.4</span> &amp;&amp; pf &gt; sp[<span class="hljs-number">6</span>] - <span class="hljs-number">0.5</span>) <span class="hljs-comment">//shitou</span><br><span class="hljs-keyword">return</span> <span class="hljs-number">2</span>;<br><span class="hljs-keyword">if</span>(pf &gt; sp[<span class="hljs-number">7</span>] - <span class="hljs-number">0.2</span>) <span class="hljs-comment">//bu</span><br><span class="hljs-keyword">return</span> <span class="hljs-number">3</span>;<br><span class="hljs-keyword">return</span> <span class="hljs-number">5</span>; <span class="hljs-comment">// erorr</span><br>&#125;<br><br><span class="hljs-function">u8 <span class="hljs-title">JudgeNum</span><span class="hljs-params">(<span class="hljs-keyword">float</span> pf)</span></span>&#123;<br><span class="hljs-keyword">if</span>(pf &lt; sp[<span class="hljs-number">0</span>] + <span class="hljs-number">0.6</span> &amp;&amp; pf &gt; sp[<span class="hljs-number">0</span>] - <span class="hljs-number">0.6</span>) <br><span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br><span class="hljs-keyword">if</span>(pf &lt; sp[<span class="hljs-number">1</span>] + <span class="hljs-number">0.5</span> &amp;&amp; pf &gt; sp[<span class="hljs-number">1</span>] - <span class="hljs-number">0.5</span>) <br><span class="hljs-keyword">return</span> <span class="hljs-number">2</span>;<br><span class="hljs-keyword">if</span>(pf &lt; sp[<span class="hljs-number">2</span>] + <span class="hljs-number">0.45</span> &amp;&amp; pf &gt; sp[<span class="hljs-number">2</span>] - <span class="hljs-number">0.45</span>) <br><span class="hljs-keyword">return</span> <span class="hljs-number">3</span>;<br><span class="hljs-keyword">if</span>(pf &lt; sp[<span class="hljs-number">3</span>] + <span class="hljs-number">0.4</span> &amp;&amp; pf &gt; sp[<span class="hljs-number">3</span>] - <span class="hljs-number">0.4</span>) <br><span class="hljs-keyword">return</span> <span class="hljs-number">4</span>;<br><span class="hljs-keyword">if</span>(pf &gt; sp[<span class="hljs-number">4</span>] - <span class="hljs-number">0.2</span>)<br><span class="hljs-keyword">return</span> <span class="hljs-number">5</span>;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><hr><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>&emsp;&emsp; 硬件太难做了，很多坑，很多时候不只是理论知识，更需要经验堆积。还是投入软件赚钱比较轻松。</p><h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><p>&emsp;&emsp;<a href="http://energia.nu/pinmaps/msp-exp430f5529/" target="_blank" rel="noopener">http://energia.nu/pinmaps/msp-exp430f5529/</a></p><p>&emsp;&emsp;<a href="http://www.ti.com.cn/product/cn/FDC2214/technicaldocuments" target="_blank" rel="noopener">http://www.ti.com.cn/product/cn/FDC2214/technicaldocuments</a></p><p>&emsp;&emsp;<a href="https://www.cnblogs.com/zjvskn/p/5757962.html" target="_blank" rel="noopener">https://www.cnblogs.com/zjvskn/p/5757962.html</a></p><p>&emsp;&emsp;<a href="https://github.com/treasersimplifies/GestureRecognition" target="_blank" rel="noopener">https://github.com/treasersimplifies/GestureRecognition</a></p>]]></content>
      
      <categories>
          
          <category> ee </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ti </tag>
            
            <tag> nuedc </tag>
            
            <tag> ee </tag>
            
            <tag> msp430 </tag>
            
            <tag> stm32 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>test markdown</title>
      <link href="/blog/2018/08/18/test-markdown/"/>
      <url>/blog/2018/08/18/test-markdown/</url>
      <content type="html"><![CDATA[<h1 id="1-hexo-搭建github-pages"><a href="#1-hexo-搭建github-pages" class="headerlink" title="1. hexo 搭建github pages"></a>1. hexo 搭建github pages</h1><p>简单记录一下步骤</p><a id="more"></a><h2 id="1-1-github-pages申请"><a href="#1-1-github-pages申请" class="headerlink" title="1.1. github pages申请"></a>1.1. github pages申请</h2><p>就是申请xxxx.github.io的仓库，不过要注意jekyll需要分支为gh-pages，hexo只需要master、</p><h2 id="1-2-hexo-搭建"><a href="#1-2-hexo-搭建" class="headerlink" title="1.2. hexo 搭建"></a>1.2. hexo 搭建</h2><p>在需要建博客的目录（无须进入io仓库）进入Git bash，然后</p><figure class="hljs highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs undefined">$ hexo init<br>$ hexo g<br></code></pre></td></tr></table></figure><p>g生成后，在public里的就是博客的网页。<br>在_config,yml里这么安排，这样主页还能自定义。</p><figure class="hljs highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs undefined">url: http://4kingras.github.io/blog<br>root: /blog/<br></code></pre></td></tr></table></figure><h2 id="1-3-github-部署"><a href="#1-3-github-部署" class="headerlink" title="1.3. github 部署"></a>1.3. github 部署</h2><p>配置好github的 ssh key， 然后先生成博客页面，复制到io仓库下，然后手动commit。</p><p>最终的目录结构</p><p><img src="/blog/2018/08/18/test-markdown/asset.png" alt="最终目录结构"></p><h2 id="1-4-hexo写博客页面"><a href="#1-4-hexo写博客页面" class="headerlink" title="1.4. hexo写博客页面"></a>1.4. hexo写博客页面</h2><p>有几个坑，一是插入图片，<br>1 要先把配置文件<code>_config.yml</code>里的<code>post_asset_folder:</code>这个选项设置为<code>true</code><br>2 在你的hexo目录下执行这样一句话<code>npm install hexo-asset-image --save</code></p><p>如果想增加read more效果 可以在指定位置加入<code>&lt;!--more--&gt;</code></p>]]></content>
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> test </tag>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hello World ！</title>
      <link href="/blog/2018/08/18/hello-world/"/>
      <url>/blog/2018/08/18/hello-world/</url>
      <content type="html"><![CDATA[<h2 id="正式开始新的博客"><a href="#正式开始新的博客" class="headerlink" title="正式开始新的博客"></a>正式开始新的博客</h2><p>为什么要写博客，我觉得除了一个展现自己技术的作用外，最主要还是博客能实现自己所学的输出，有输出才能更好的消化自己学习的东西。</p><p>More info: <a href="https://blog.csdn.net/qq_20326475/article/details/41987223" target="_blank" rel="noopener">远古时代唯一一篇博文</a></p>]]></content>
      
      <categories>
          
          <category> default </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hello </tag>
            
        </tags>
      
    </entry>
    
  
  
    
  
</search>
